name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -f package-lock.json
          npm install

      - name: Build packages
        run: npm run build

      - name: Create dependency archive with permissions
        run: |
          tar -czf dependencies.tar.gz \
            node_modules \
            packages/*/node_modules \
            packages/*/dist

      - name: Upload dependency archive
        uses: actions/upload-artifact@v4
        with:
          name: dependencies
          path: dependencies.tar.gz
          retention-days: 1

  lint-and-typecheck:
    name: Lint and TypeCheck
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      - name: Extract dependencies with permissions
        run: tar -xzf dependencies.tar.gz

      - name: Check TypeScript
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      - name: Extract dependencies with permissions
        run: tar -xzf dependencies.tar.gz

      - name: Run unit tests
        run: npm run test:unit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      - name: Extract dependencies with permissions
        run: tar -xzf dependencies.tar.gz
      
      - name: Setup Python dependencies for DB package
        run: |
          cd packages/db
          uv --project . venv
          uv --project . sync

      - name: Run integration tests
        run: npm run test:integration
        env:
          PYTHON_BIN: ${{ github.workspace }}/packages/db/.venv/bin/python

  e2e-tests:
    name: E2E Tests (Optional)
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    continue-on-error: true  # E2Eテストの失敗はCIを失敗させない

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      - name: Extract dependencies with permissions
        run: tar -xzf dependencies.tar.gz
      
      - name: Setup Python dependencies for DB package
        run: |
          cd packages/db
          uv --project . venv
          uv --project . sync

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          PYTHON_BIN: ${{ github.workspace }}/packages/db/.venv/bin/python

  # 全テスト完了の確認（必須テストのみ）
  tests-complete:
    name: All Required Tests Complete
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, integration-tests]
    
    steps:
      - name: Tests completed successfully
        run: echo "✅ All required tests passed successfully!"